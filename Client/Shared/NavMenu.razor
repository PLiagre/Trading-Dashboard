@using TradingDashboard.Client.Services
@inject LocalizationService LocalizationService
@implements IDisposable

<div class="nav-menu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="nav-icon">üè†</span>
                <span class="nav-text">@LocalizationService.GetString("Dashboard")</span>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/markets">
                <span class="nav-icon">üìä</span>
                <span class="nav-text">@LocalizationService.GetString("Markets")</span>
            </NavLink>
        </div>
        
        <div class="nav-section">
            <h6 class="nav-section-title">@LocalizationService.GetString("All")</h6>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/markets?category=indices">
                    <span class="nav-icon">üìà</span>
                    <span class="nav-text">@LocalizationService.GetString("Indices")</span>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/markets?category=crypto">
                    <span class="nav-icon">‚Çø</span>
                    <span class="nav-text">@LocalizationService.GetString("Crypto")</span>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/markets?category=commodities">
                    <span class="nav-icon">ü•á</span>
                    <span class="nav-text">@LocalizationService.GetString("Commodities")</span>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/markets?category=bonds">
                    <span class="nav-icon">üèõÔ∏è</span>
                    <span class="nav-text">@LocalizationService.GetString("Bonds")</span>
                </NavLink>
            </div>
        </div>
        
        <div class="nav-section">
            <h6 class="nav-section-title">@LocalizationService.GetString("Language")</h6>
            <div class="nav-item px-3">
                <div class="language-selector">
                    <button class="language-btn @(LocalizationService.CurrentLanguage == "fr" ? "active" : "")" 
                            @onclick='() => SetLanguage("fr")'>
                        üá´üá∑ FR
                    </button>
                    <button class="language-btn @(LocalizationService.CurrentLanguage == "en" ? "active" : "")" 
                            @onclick='() => SetLanguage("en")'>
                        üá¨üáß EN
                    </button>
                </div>
            </div>
        </div>
    </nav>
</div>

<style>
    .nav-menu {
        height: 100vh;
        background: var(--nav-bg);
        border-right: 1px solid var(--border-color);
        padding: 1rem 0;
    }

    .nav-section {
        margin-top: 2rem;
        border-top: 1px solid var(--border-color);
        padding-top: 1rem;
    }

    .nav-section-title {
        color: var(--text-muted);
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
        padding: 0 1rem;
    }

    .nav-item {
        margin-bottom: 0.25rem;
    }

    .nav-link {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        color: var(--text-color);
        text-decoration: none;
        border-radius: 0.375rem;
        transition: all 0.2s ease;
        font-size: 0.95rem;
        font-weight: 500;
    }

    .nav-link:hover {
        background: var(--nav-hover-bg);
        color: var(--nav-hover-color);
        text-decoration: none;
    }

    .nav-link.active {
        background: var(--primary-color);
        color: white;
    }

    .nav-icon {
        margin-right: 0.75rem;
        font-size: 1.1rem;
        width: 1.5rem;
        text-align: center;
    }

    .nav-text {
        flex: 1;
    }

    .language-selector {
        display: flex;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
    }

    .language-btn {
        flex: 1;
        padding: 0.5rem 0.75rem;
        border: 1px solid var(--border-color);
        background: var(--card-bg);
        color: var(--text-color);
        border-radius: 0.25rem;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .language-btn:hover {
        background: var(--nav-hover-bg);
        border-color: var(--primary-color);
    }

    .language-btn.active {
        background: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }
</style>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task SetLanguage(string languageCode)
    {
        await LocalizationService.SetLanguageAsync(languageCode);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LocalizationService.InitializeAsync();
        LocalizationService.OnLanguageChanged += OnLanguageChanged;
    }

    private void OnLanguageChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LocalizationService.OnLanguageChanged -= OnLanguageChanged;
    }
} 